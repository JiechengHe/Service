什么是微服务？
维基百科的定义：微服务是由单一应用程序构成的小服务，拥有自己的进程与轻量化处理，服务依赖业务功能设计，以全自动的方式部署，与其他服务使用HTTP API通讯。同时，服务会使用最小规模的集中管理(Docker)技术，服务可以用不同的编程语言与数据库。

什么是单体应用？
以LAMP和MVC为例，业务通常是通过部署一个WAR包到Tomcat中，然后启动Tomcat，监听某个端口即可对外提供服务。
存在的问题：
1.部署效率低下：当单体应用的代码量增多时，依赖的资源也会越来越多，因此在编译打包、部署测试时会消耗大量的时间。
2.团队协作开发成本高：在单体应用中，部署时只需要一个模块出现问题，就需要所有成员参与其中排查问题。
3.系统高可用性差：所有的模块都在一个WAR包中，因此，如果某个模块出现问题，那么将导致整个进程异常退出。
4.线上发布慢：一旦代码膨胀了，一次发布就需要消耗大量的时间。

什么是服务化？
服务化就是把传统的单机应用中通过JAR包依赖产生的本地方法调用，改成通过RPC接口产生的远程方法调用。在开发中将一些通用的业务逻辑，抽象并独立成为专门的模块。

相比于服务化，微服务的特点是：
1.服务拆分粒度更细：只要模块依赖的资源与其他模块都没有关系，那么就可以拆分为一个微服务。
2.服务独立部署：每个微服务都严格遵循独立打包部署的准则，互不影响。
3.服务独立维护：每个微服务都交由一个小团队开发。
4.服务治理能力要求高：需要有统一的服务治理平台。

相关知识：RPC，docker，DevOps，持续交付。